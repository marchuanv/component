function createHttpServerMessageBusManager({scopeId}) {
    let container = factory.getContainer({ scopeId, type: HttpServerMessageBusManager, variableName:'httpServerMessageBusManager', singleton: false });
    if (!container) {
        container = factory.createContainer({ scopeId, type: HttpServerMessageBusManager, variableName:'httpServerMessageBusManager', singleton: false });
        container.config({});
            container.config(createHttpServerStopMessageQueueBinding({scopeId}));
container.config(createHttpServerStartedMessageQueueBinding({scopeId}));
container.config(createHttpServerStartMessageQueueBinding({scopeId}));
container.config(createHttpServerResponseMessageQueueBinding({scopeId}));
container.config(createHttpServerRequestMessageQueueBinding({scopeId}));
container.config(createHttpServerStoppedMessageQueueBinding({scopeId}));
    }
    container.ensureInstance();
    return container.references;
}
