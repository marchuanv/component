function createHttpServerMessageBusManager({scopeId,messageQueue}) {
    const container = factory.getContainer({ scopeId, type: HttpServerMessageBusManager, variableName:'httpServerMessageBusManager', singleton: false });
    container.config(getHttpServerMessageBusManagerFactoryConfig());
    container.reference({messageQueue});
        container.reference(createHttpServerStopMessageQueueBinding({scopeId,messageQueue}));
container.reference(createHttpServerStartedMessageQueueBinding({scopeId,messageQueue}));
container.reference(createHttpServerStartMessageQueueBinding({scopeId,messageQueue}));
container.reference(createHttpServerResponseMessageQueueBinding({scopeId,messageQueue}));
container.reference(createHttpServerRequestMessageQueueBinding({scopeId,messageQueue}));
container.reference(createHttpServerStoppedMessageQueueBinding({scopeId,messageQueue}));
    container.ensureInstance();
    return container.references;
}
