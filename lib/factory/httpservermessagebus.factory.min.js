function createHttpServerMessageBus({scopeId,timeout,senderHost,senderPort}) {
    const container = factory.getContainer({ scopeId, type: HttpServerMessageBus, variableName:'httpServerMessageBus', singleton: false });
    container.config(getHttpServerMessageBusFactoryConfig());
    container.reference({timeout,senderHost,senderPort});
        container.reference(createLogger({scopeId}));
container.reference(createSenderAddress({scopeId,senderHost,senderPort}));
container.reference(createHttpServerStoppedMessageQueueBinding({scopeId}));
container.reference(createHttpServerStopMessageQueueBinding({scopeId}));
container.reference(createHttpServerStartedMessageQueueBinding({scopeId}));
container.reference(createHttpServerStartMessageQueueBinding({scopeId}));
container.reference(createHttpServerResponseMessageQueueBinding({scopeId}));
container.reference(createHttpServerRequestMessageQueueBinding({scopeId}));
    container.ensureInstance();
    return container.references;
}
