function createHttpClientMessageBus({scopeId,timeout}) {
    let container = factory.getContainer({ scopeId, type: HttpClientMessageBus, variableName:'httpClientMessageBus', singleton: false });
    if (!container) {
        container = factory.createContainer({ scopeId, type: HttpClientMessageBus, variableName:'httpClientMessageBus', singleton: false });
        container.config({timeout});
            container.config(createHttpClientStoppedMessageQueueBinding({scopeId}));
container.config(createHttpClientStopMessageQueueBinding({scopeId}));
container.config(createHttpClientStartedMessageQueueBinding({scopeId}));
container.config(createHttpClientStartMessageQueueBinding({scopeId}));
container.config(createHttpClientResponseMessageQueueBinding({scopeId}));
container.config(createHttpClientRequestMessageQueueBinding({scopeId}));
    }
    container.ensureInstance();
    return container.references;
}
