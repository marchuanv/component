function createHttpClientMessageBus({scopeId,timeout,messageQueue}) {
    const container = factory.getContainer({ scopeId, type: HttpClientMessageBus, variableName:'httpClientMessageBus', singleton: false });
    container.config(getHttpClientMessageBusFactoryConfig());
    container.reference({timeout,messageQueue});
        container.reference(createHttpClientStopMessageQueueBinding({scopeId,messageQueue}));
container.reference(createHttpClientStartedMessageQueueBinding({scopeId,messageQueue}));
container.reference(createHttpClientStartMessageQueueBinding({scopeId,messageQueue}));
container.reference(createHttpClientResponseMessageQueueBinding({scopeId,messageQueue}));
container.reference(createHttpClientRequestMessageQueueBinding({scopeId,messageQueue}));
    container.ensureInstance();
    return container.references;
}
