function Factory(){Object.defineProperty(this,"getContainer",{configurable:!1,writable:!1,value:({scopeId:e,type:n,variableName:s,singleton:t})=>{t=t?"global":e;if(!t)throw new Error("Factory: no scopeId provided.");let i=containers[t];i||(i=[],containers[t]=i);e=i.find(e=>e.name===s&&e.type.name===n.name);if(e)return e;const o={references:{},Id:utils.generateGUID(),type:n,name:s,scopeId:t,config:({configJson:e})=>{o.references=e},reference:e=>{for(const t of Object.keys(e))o.references[t]||(o.references[t]=e[t])},ensureInstance:()=>{if(o.references[s])return o.references[s];const e={scopeId:o.scopeId};for(const t of Object.keys(o.references))e[t]=o.references[t];console.log(`creating an instance of ${n.name} on the ${o.scopeId} scope.`),o.references[s]=new n(e)}};return i.push(o),o}})}function ClientMessageBus({}){}function HttpClientMessageBus({}){}function createClientMessageBus({scopeId:e,messageConverter:t,httpClientRequestMessageBus:n,httpClientResponseMessageBus:s,webSocketClientRequestMessagebus:i,webSocketClientResponseMessageBus:o}){const r=factory.getContainer({scopeId:e,type:ClientMessageBus,variableName:"clientMessageBus",singleton:!1});return r.config(new ClientMessageBusCtorParamConfig),r.reference({messageConverter:t,httpClientRequestMessageBus:n,httpClientResponseMessageBus:s,webSocketClientRequestMessagebus:i,webSocketClientResponseMessageBus:o}),r.ensureInstance(),r.references}function createHttpClientMessageBus({scopeId:e,timeout:t,httpClientRequestMessageQueueBinding:n,httpClientResponseMessageQueueBinding:s,httpClientStartMessageQueueBinding:i,httpClientStartedMessageQueueBinding:o,httpClientStopMessageQueueBinding:r,httpClientStoppedMessageQueueBinding:a}){const u=factory.getContainer({scopeId:e,type:HttpClientMessageBus,variableName:"httpClientMessageBus",singleton:!1});return u.config(new HttpClientMessageBusCtorParamConfig),u.reference({timeout:t,httpClientRequestMessageQueueBinding:n,httpClientResponseMessageQueueBinding:s,httpClientStartMessageQueueBinding:i,httpClientStartedMessageQueueBinding:o,httpClientStopMessageQueueBinding:r,httpClientStoppedMessageQueueBinding:a}),u.ensureInstance(),u.references}Factory.prototype.createContainer=function(e){},ClientMessageBus.prototype.publish=async function({}){},ClientMessageBus.prototype.subscribe=function({}){};