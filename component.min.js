function Factory(){Object.defineProperty(this,"getContainer",{configurable:!1,writable:!1,value:({scopeId:e,type:s,variableName:n,singleton:t})=>{t=t?"global":e;if(!t)throw new Error("Factory: no scopeId provided.");let i=containers[t];i||(i=[],containers[t]=i);e=i.find(e=>e.name===n&&e.type.name===s.name);if(e)return e;const a={references:{},Id:utils.generateGUID(),type:s,name:n,scopeId:t,config:({configJson:e})=>{a.references=e},reference:e=>{for(const t of Object.keys(e))a.references[t]||(a.references[t]=e[t])},ensureInstance:()=>{if(a.references[n])return a.references[n];const e={scopeId:a.scopeId};for(const t of Object.keys(a.references))e[t]=a.references[t];console.log(`creating an instance of ${s.name} on the ${a.scopeId} scope.`),a.references[n]=new s(e)}};return i.push(a),a}})}function ClientMessageBus({}){}function HttpClientMessageBus({}){}function HttpClientMessageBusManager({}){}function HttpClientRequestMessageBus({}){}function HttpClientRequestMessageQueueBinding({}){}function createClientMessageBus({scopeId:e,messageConverter:t,messageQueue:s,httpClientResponseMessageBus:n,webSocketClientRequestMessagebus:i,webSocketClientResponseMessageBus:a}){const u=factory.getContainer({scopeId:e,type:ClientMessageBus,variableName:"clientMessageBus",singleton:!1});return u.config(getClientMessageBusFactoryConfig()),u.reference({messageConverter:t,messageQueue:s,httpClientResponseMessageBus:n,webSocketClientRequestMessagebus:i,webSocketClientResponseMessageBus:a}),u.reference(createHttpClientRequestMessageBus({scopeId:e,messageQueue:s})),u.ensureInstance(),u.references}function createHttpClientMessageBus({scopeId:e,timeout:t,messageQueue:s,httpClientResponseMessageQueueBinding:n,httpClientStartMessageQueueBinding:i,httpClientStartedMessageQueueBinding:a,httpClientStopMessageQueueBinding:u}){const r=factory.getContainer({scopeId:e,type:HttpClientMessageBus,variableName:"httpClientMessageBus",singleton:!1});return r.config(getHttpClientMessageBusFactoryConfig()),r.reference({timeout:t,messageQueue:s,httpClientResponseMessageQueueBinding:n,httpClientStartMessageQueueBinding:i,httpClientStartedMessageQueueBinding:a,httpClientStopMessageQueueBinding:u}),r.reference(createHttpClientRequestMessageQueueBinding({scopeId:e,messageQueue:s})),r.ensureInstance(),r.references}function createHttpClientMessageBusManager({scopeId:e,httpClientStopMessageQueueBinding:t,httpClientStartMessageQueueBinding:s,httpClientStartedMessageQueueBinding:n}){const i=factory.getContainer({scopeId:e,type:HttpClientMessageBusManager,variableName:"httpClientMessageBusManager",singleton:!1});return i.config(getHttpClientMessageBusManagerFactoryConfig()),i.reference({httpClientStopMessageQueueBinding:t,httpClientStartMessageQueueBinding:s,httpClientStartedMessageQueueBinding:n}),i.ensureInstance(),i.references}function createHttpClientRequestMessageBus({scopeId:e,messageQueue:t}){const s=factory.getContainer({scopeId:e,type:HttpClientRequestMessageBus,variableName:"httpClientRequestMessageBus",singleton:!1});return s.config(getHttpClientRequestMessageBusFactoryConfig()),s.reference({messageQueue:t}),s.reference(createHttpClientRequestMessageQueueBinding({scopeId:e,messageQueue:t})),s.ensureInstance(),s.references}function createHttpClientRequestMessageQueueBinding({scopeId:e,messageQueue:t}){const s=factory.getContainer({scopeId:e,type:HttpClientRequestMessageQueueBinding,variableName:"httpClientRequestMessageQueueBinding",singleton:!1});return s.config(getHttpClientRequestMessageQueueBindingFactoryConfig()),s.reference({messageQueue:t}),s.ensureInstance(),s.references}Factory.prototype.createContainer=function(e){},ClientMessageBus.prototype.publish=async function({}){},ClientMessageBus.prototype.subscribe=function({}){},HttpClientRequestMessageBus.prototype.publish=function({}){};